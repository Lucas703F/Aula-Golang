// Arquivo principal do programa (entrypoint) ü´°
// Conven√ß√£o de mercado: colocar em cmd/<nome-app>/main.go
package main

// Importa os pacotes necess√°rios
import (
	"fmt"
	"os"

	"github.com/seu-usuario/meu-projeto-go/internal/fibonacci"
	"github.com/seu-usuario/meu-projeto-go/internal/hello"
)

// Fun√ß√£o principal do programa
func main() {
	// Mensagem inicial da aplica√ß√£o
	fmt.Println("üöÄ Meu primeiro projeto em Go com estrutura de mercado!")
	hello.SayHello()

	var valorEntrada int
	fmt.Print("\n\nEscolha um valor para calcular: ")
	fmt.Fscan(os.Stdin, &valorEntrada)
	result := fibonacci.Fibonacci(valorEntrada)
	fmt.Printf("O resultado do Fibonacci(%v) √©: %v\n", valorEntrada, result)

	nome := "Lucas"

	switch nome {
	case "Lucas":
		fmt.Println("\nLucas Felipe de Ara√∫jo Ferreira")
	default:
		fmt.Println("Nome n√£o encontrado!")
	}

	// Fun√ß√£o an√¥nima atribu√≠da a uma vari√°vel
	funcaoAnonima := func() {
		fmt.Println("Ol√°! Esta √© uma fun√ß√£o an√¥nima.")
	}

	// Executando a fun√ß√£o an√¥nima
	funcaoAnonima()

}
